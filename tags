!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/336ebee/
Command	main.go	/^type Command struct {$/;"	s	package:main
Commands	main.go	/^	Commands map[string]*Command `yaml:"commands"`$/;"	m	struct:main.Config	typeref:typename:map[string]*Command
Config	main.go	/^type Config struct {$/;"	s	package:main
Description	main.go	/^	Description string `yaml:"description"`$/;"	m	struct:main.Command	typeref:typename:string
FormatSource	main.go	/^func FormatSource(source []byte) ([]byte, error) {$/;"	f	package:main	typeref:typename:([]byte, error)
Name	main.go	/^	Name string$/;"	m	struct:main.data	typeref:typename:string
Path	main.go	/^	Path        string `yaml:"path"`$/;"	m	struct:main.Command	typeref:typename:string
Template	main.go	/^	Template    string `yaml:"template"`$/;"	m	struct:main.Command	typeref:typename:string
Type	main.go	/^	Type string$/;"	m	struct:main.data	typeref:typename:string
app	main.go	/^var app = cli.NewApp()$/;"	v	package:main
core	main.go	/^func core(in, out string) error {$/;"	f	package:main	typeref:typename:error
data	main.go	/^type data struct {$/;"	s	package:main
main	main.go	/^func main() {$/;"	f	package:main
main	main.go	/^package main$/;"	p
open	main.go	/^func open(fname string, flag int) (*os.File, error) {$/;"	f	package:main	typeref:typename:(*os.File, error)
qs	main.go	/^var qs = []*survey.Question{$/;"	v	package:main
